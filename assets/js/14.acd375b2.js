(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{179:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("Flarum features a powerful translation system (based on "),a("a",{attrs:{href:"https://symfony.com/doc/current/book/translation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symfony's translator"),a("OutboundLink")],1),t._v(") that allows the interface to display information in virtually any language. You should consider taking advantage of Flarum's translator as you develop your extension, even if you have no intention of using it in more than a single language.")]),t._v(" "),a("p",[t._v("For one thing, this system will allow you to change the information displayed by your extension without editing the actual code. It will also give you the tools needed to efficiently deal with phenomena such as pluralization and agreement for gender. And you never know: it may come in handy later if you decide you want to add more languages and make your extension available to users around the world!")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("Unlike Flarum's bundled extensions — which are translated using resources added by "),a("router-link",{attrs:{to:"./languages.html"}},[t._v("language packs")]),t._v(" — a third-party extension has to supply all of its own translations. As a Flarum developer, it will be up to you to obtain and maintain the resources for every language you want your extension to support.")],1),t._v(" "),a("p",[t._v("As a rule, a Flarum site can only display translations corresponding to the language packs that have been installed on that site. But Flarum will do its level best — within this limitation — to render your extension's output in some sort of user-readable language:")]),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("Since English translations could be the only thing standing between forum users and unsightly translation keys, we strongly recommend including a complete set of English resources with every extension. (You will also need to include English resources if you wish to list your extension on the Flarum Marketplace.)")]),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("Flarum's language resources use the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/YAML",target:"_blank",rel:"noopener noreferrer"}},[t._v("YAML"),a("OutboundLink")],1),t._v(" file format. The locale files for a third-party extension need to be stored in the extension's "),a("code",[t._v("locale")]),t._v(" folder. Each locale file should be named using the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 639-1 code"),a("OutboundLink")],1),t._v(' for the language it contains. For example, a file containing French translations should be named  "'),a("code",[t._v("fr.yml")]),t._v('".')]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If you wish to provide support for a specific locale, you can add an underscore followed by an "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 3166-1 alpha-2"),a("OutboundLink")],1),t._v(' country code; the filename for French as spoken in Canada, for example, would be "'),a("code",[t._v("fr_CA.yml")]),t._v('". But you should be sure to include a locale file containing "generic" translations for the same language, so Flarum will have something it can fall back on in the event a user specifies a locale that you haven\'t provided for.')])]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),a("p",[t._v("Each namespacing key should also be followed by a colon. Keys should be nested according to the YAML outline format, adding two spaces of indentation for each level in the hierarchy. Put this all together, and the locale file for the "),a("router-link",{attrs:{to:"./start.html"}},[t._v("Quick Start tutorial")]),t._v(" might look something like this:")],1),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),a("p",[t._v("The examples in the preceding section have already given you the basics: you type an ID key — followed by a colon and a space — then you type in the translation. It's that easy! Here we would just like to add a few details that will help you deal with longer and more complex translations.")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),a("p",[t._v("The literal block ends with the last line to be indented at least two spaces more than the ID key. Quotation marks are not needed because the block is effectively delimited by this extra two spaces of indentation.")]),t._v(" "),a("p",[t._v("Flarum's core language resources employ literal blocks mainly for email body content.")]),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("It's not uncommon to use the same bit of text in more than one location or context. Let's assume that you want your extension to display the phrase \"Edit Stuff\" in two locations in the user interface:")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),a("p",[t._v("Once you've added a translation to your locale file, with appropriate namespacing and identifier keys, you can use the "),a("code",[t._v("app.translator.trans()")]),t._v(" method to reference that translation in your code. For instance, the "),a("code",[t._v("js/forum/src/main.js")]),t._v(" file for the "),a("router-link",{attrs:{to:"./start.html"}},[t._v("Quick Start tutorial")]),t._v(" might end up looking like this:")],1),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._v(" "),a("p",[t._v("You can include variables in translations. As an example, let's look at the code that creates the first item in Flarum's "),a("a",{attrs:{href:"https://github.com/flarum/core/blob/master/js/forum/src/components/DiscussionsSearchSource.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("search results dropdown"),a("OutboundLink")],1),t._v(". This button quotes the search query entered by the user — information that is passed to the translator along with the translation key, as an additional parameter:")]),t._v(" "),t._m(31),a("p",[t._v("A matching placeholder in the translation lets the translator know where it should insert the variable:")]),t._v(" "),t._m(32),t._m(33),t._v(" "),t._m(34),t._v(" "),a("p",[t._v("Abstracting translations from HTML can pose a unique challenge: How do you deal with HTML elements that affect just part of the sentence? Fortunately, Flarum gives you a way to add tags to your translations.")]),t._v(" "),a("p",[t._v("You begin by adding a key to the parameters argument for each element that you want the translator to handle. The following snippet — from the "),a("a",{attrs:{href:"https://github.com/flarum/core/blob/master/js/src/admin/components/EditGroupModal.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Edit Group modal"),a("OutboundLink")],1),t._v(" of the admin interface — shows a translation key accompanied by a parameters object with one item.")]),t._v(" "),t._m(35),a("p",[t._v("Note that each parameter is defined using a single HTML tag, with a slash added before the closing angle bracket. You can then use HTML-style opening and closing tags in your locale file to specify which part of the translation is affected by each element. Once again, double quotes are required.\nYou can see that not all tags are passed as an argument, only those who have attributes.")]),t._v(" "),t._m(36),t._m(37),t._v(" "),a("p",[t._v("Localizers can reorder elements as needed, and even choose to omit tags if they so desire. But they can't add any tags of their own: the translator will simply ignore any HTML-style tag that doesn't correspond to a properly defined parameter in the code.")]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),a("p",[t._v("This example is from the "),a("a",{attrs:{href:"https://github.com/flarum/tags/blob/master/js/forum/src/components/TagDiscussionModal.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Choose Tags modal"),a("OutboundLink")],1),t._v(" of the Tags extension, where it tells the user how many more primary tags can be selected. Note that the "),a("code",[t._v("remaining")]),t._v(" variable is passed to the translator "),a("strong",[t._v("twice")]),t._v('. First, it appears as itself, to condition the pluralization of the word "tags". Then it appears again as the value of the '),a("code",[t._v("count")]),t._v(" parameter, which the translator can use to insert that value in the translation.")]),t._v(" "),t._m(41),t._v(" "),t._m(42),a("p",[t._v("Of course English has only two variants: singular or plural. You'll need to provide additional variants when creating translations for a language that has more than one plural form. If you need detailed information about the number of variants required for a language — or the order in which they should be listed — you can refer directly to the "),a("a",{attrs:{href:"https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Translation/PluralizationRules.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("pluralization rules"),a("OutboundLink")],1),t._v(" that Flarum uses to map the variable to plural forms.")]),t._v(" "),t._m(43),t._v(" "),a("p",[t._v("Support for grammatical gender will be added in a future version of Flarum. Detailed instructions will be provided here once that functionality becomes available.")]),t._v(" "),t._m(44),t._v(" "),a("p",[t._v("Translation is generally handled by Flarum's front-end client. However, you can use translations in your PHP code if you need to.")]),t._v(" "),t._m(45),t._v(" "),t._m(46),a("p",[t._v("Then, the API is similar to the JavaScript Translator class. You can use "),a("code",[t._v("$translator->trans")]),t._v(" like you'd use "),a("code",[t._v("app.translator.trans")]),t._v(" in JavaScript.\nYou can learn more about the Translator's methods in "),a("a",{attrs:{href:"https://api.symfony.com/3.1/Symfony/Component/Translation/Translator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symfony's "),a("code",[t._v("Translator")]),t._v(" documentation"),a("OutboundLink")],1),t._v(", which Flarum's "),a("code",[t._v("Translator")]),t._v(" extends.")]),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._v(" "),a("p",[t._v("The following guidelines were created for use in the Flarum core and bundled extensions. Their purpose is to ensure that translation keys are organized and named in a consistent fashion, so Flarum's localizers will be able to create and maintain high-quality language packs with a minimum of difficulty.")]),t._v(" "),a("p",[t._v("Developers who wish to contribute to the development of Flarum are expected to follow these guidelines. Third-party developers may also wish to follow them, so experienced Flarum localizers who undertake the translation of third-party extensions will find themselves working in familiar surroundings.")]),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),a("p",[t._v("The namespacing for translation keys used in official Flarum components, including bundled extensions, should match the name of the language pack locale file for the component in question. The namespaces for Flarum's non-extension components are fixed as shown below:")]),t._v(" "),t._m(55),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),a("p",[t._v("Since Flarum doesn't have all that many interfaces, we've come up with a short list of second-level keys for you to choose from. We've included the more frequently used ones in the locale file template created with the extension skeleton. Below you will find the complete list, with explanations:")]),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._m(62),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),a("p",[t._v("If you're modifying an existing location — to add a new setting to the Settings page, for example — you should copy our namespacing so experienced Flarum localizers will know at a glance exactly where the new translations are displayed. See the "),a("a",{attrs:{href:"https://github.com/flarum/lang-english/tree/master/locale",target:"_blank",rel:"noopener noreferrer"}},[t._v("English locale files"),a("OutboundLink")],1),t._v(" for the details of our namespacing scheme.")]),t._v(" "),a("p",[t._v("If your extension adds a new location — such as a new dialog box — you should feel free to create a new third-level key to namespace the translations that go there. Take a couple minutes to familiarize yourself with the namespacing in the locale files linked above, then create a new key that fits in with that scheme.")]),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),a("p",[t._v("We'll start with the suffix because it's the most important part of the key name. It tells localizers what sort of object they should look for when trying to find the translation in the interface. For example, the suffixes in the following list are used for GUI objects more or less related to user operations:")]),t._v(" "),t._m(70),a("p",[t._v("These suffixes are used for informative or descriptive text elements:")]),t._v(" "),t._m(71),t._m(72),t._v(" "),t._m(73),a("p",[t._v("The above is a complete listing of the suffixes available for use in locale files. You should take care to use them consistently, as doing so will make life easier for localizers. If you feel something is missing from the list, please file an issue with the developers; we'll consider adding a new suffix if the situation warrants it.")]),t._v(" "),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),t._m(82),a("p",[t._v("As you can see, we want to reuse a single translation in three different contexts (including two locations): (1) as a link displayed in the site header, (2) as a button displayed in the Log In modal, and (3) as the title of that modal. So all three of these keys have been set to reference the same full translation key.")]),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._m(86),t._v(" "),a("p",[t._v("For this reason, any key references in the "),a("a",{attrs:{href:"https://github.com/flarum/lang-english/blob/master/locale/core.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("core resources"),a("OutboundLink")],1),t._v(" "),a("strong",[t._v("must")]),t._v(" point to keys in the "),a("code",[t._v("core.ref")]),t._v(" namespace. Key references in the resources for bundled extensions may point to either of two locations:")]),t._v(" "),t._m(87),t._v(" "),t._m(88),t._v(" "),a("p",[t._v("No extension should ever reference a key from another extension, as doing so will result in a dependency.")]),t._v(" "),t._m(89),t._v(" "),t._m(90),t._v(" "),a("p",[t._v("Comments (and empty lines) should be added to locale files so localizers will find them easier to navigate.")]),t._v(" "),t._m(91),t._v(" "),t._m(92),t._v(" "),t._m(93),t._v(" "),t._m(94),t._v(" "),a("p",[t._v("In this appendix, we'd like to offer a few tips that may help you to avoid some of the more common pitfalls in the internationalization process. Abstracting language from code is easily one of the more humdrum tasks a programmer has to deal with, but if you don't give due attention to the subtleties involved, you're likely to end up creating your localizers an unnecessary headache or two.")]),t._v(" "),a("p",[t._v("Of course, it's not just about making life easier for localizers. Because when they get headaches, they will come to you for help — often months (or even years) after you've put the project behind you and moved on to something else! It's the sort of situation where an ounce or two of prevention may indeed be worth several pounds of cure further down the road … for everybody involved.")]),t._v(" "),a("p",[t._v("It's probably impossible to avoid localization issues completely; there are just too many variables. But by following a few simple guidelines, you should be able to head off many issues before they happen.")]),t._v(" "),t._m(95),t._v(" "),a("p",[t._v("This probably goes without saying. After all, if you're going to go to the trouble of extracting translations, you might as well finish the job, right? Well, yes, but that's easier said than done. It's really quite unusual to find a program that doesn't have at least a few bits of hardcoded text floating around somewhere.")]),t._v(" "),a("p",[t._v("Even tiny bits of text can cause problems for localizers. A comma here, a colon there … perhaps a pair of brackets inserted to make the page more legible: such things can and do cause issues for localizers. After all, not all languages use the same glyphs for these things! Just one hardcoded space can be a problem for someone trying to translate the interface into a language that doesn't use spaces to separate words.")]),t._v(" "),t._m(96),t._v(" "),t._m(97),t._v(" "),a("p",[t._v("Hardcoded text isn't the only way that code can create problems for localizers. Hardcoded syntax issues occur when the code forces words into a specific order that just won't work in other languages. They are generally the result of using two translations where just one would be more appropriate.")]),t._v(" "),a("p",[t._v("For an example, let's look at the line of text that's printed near the bottom of the "),a("a",{attrs:{href:"https://github.com/flarum/core/blob/master/js/forum/src/components/LogInModal.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Log In modal"),a("OutboundLink")],1),t._v(":")]),t._v(" "),t._m(98),t._v(" "),a("p",[t._v("We originally coded this line as two translations, which were separated by a hardcoded space:")]),t._v(" "),t._m(99),a("p",[t._v("There were good reasons for doing it this way. For one thing, it made it easy to turn the second half into a link. And since the second translation is reused elsewhere, keeping it separate seemed like a no-brainer.")]),t._v(" "),a("p",[t._v("But there were problems with this approach. The hardcoded space seemed likely to pose issues for some localizers, as mentioned above. And splitting this text into two strings would make it impossible to render the line as a single sentence with the link embedded in the middle:")]),t._v(" "),t._m(100),t._v(" "),a("p",[t._v("Since it seemed possible that a localizer might need this sort of flexibility, we opted to abstract the line as a single translation, using HTML-style tags to enclose the link text:")]),t._v(" "),t._m(101),a("p",[t._v("This puts the (formerly hardcoded) space in the translation, so localizers who don't need it can remove it. And the tags can be positioned freely within the translation, making this approach much more flexible.")]),t._v(" "),a("p",[t._v("The moral of this story is: when you've got two adjacent chunks of text which seem related to each other grammatically — or even semantically — you should think about finding a way to incorporate them both in a single translation. Your localizers may have cause to thank you!")]),t._v(" "),a("p",[t._v("We might also conclude that the presence of little bits of hardcoded text — such as the hardcoded space in this example — may be a sort of "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Code_smell",target:"_blank",rel:"noopener noreferrer"}},[t._v("code smell"),a("OutboundLink")],1),t._v(" indicating the presence of a deeper issue. This isn't always the case, but it's a possibility that's worth taking into consideration.")]),t._v(" "),t._m(102),t._v(" "),a("p",[t._v("They are surprisingly easy to overlook. Of course, the need for pluralization support is fairly obvious here:")]),t._v(" "),t._m(103),t._v(" "),a("p",[t._v("And the situation is complicated by the presence of the second-person pronoun, since it always takes the plural form in English, even when we're talking about one person. That's why the "),a("code",[t._v("app.translator")]),t._v(" call is so complicated in the code that outputs the above sentences for the "),a("a",{attrs:{href:"https://github.com/flarum/likes/blob/master/js/forum/src/addLikesList.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Likes extension"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Now look at this similar set of sentences, output by similar code in the "),a("a",{attrs:{href:"https://github.com/flarum/mentions/blob/master/js/forum/src/addMentionedByList.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mentions extension"),a("OutboundLink")],1),t._v(":")]),t._v(" "),t._m(104),t._v(" "),t._m(105),t._v(" "),t._m(106),t._v(" "),t._m(107),a("p",[t._v("… but it would be a very good idea to add a comment after the translations in question, to alert localizers to the fact that the code will support the addition of such variants, should they be necessary.")]),t._v(" "),t._m(108),t._v(" "),t._m(109),t._v(" "),a("p",[t._v("Although this may sound inefficient, there's a good reason for doing things this way: it's the easiest way to ensure that localizers will have the flexibility they need. If you reuse keys in your code, you'll eventually hit a snag. Your localizers will be unable to find a single expression that fits every context where you've used some key or other … and then they'll start bugging you to fix your code.")]),t._v(" "),t._m(110)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"internationalization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#internationalization","aria-hidden":"true"}},[this._v("#")]),this._v(" Internationalization")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("This guide will show you how to "),a("a",{attrs:{href:"#locale-file"}},[t._v("create a locale file")]),t._v(" containing language resources for your extension, and how to "),a("a",{attrs:{href:"#using-the-translator"}},[t._v("use the translator")]),t._v(" to access those resources from within your code. You will learn how to deal with more complex translations involving "),a("a",{attrs:{href:"#including-variables"}},[t._v("variables")]),t._v(" and "),a("a",{attrs:{href:"#adding-html-tags"}},[t._v("HTML tags")]),t._v(", as well as "),a("a",{attrs:{href:"#handling-pluralization"}},[t._v("pluralization")]),t._v(" and "),a("a",{attrs:{href:"#gender"}},[t._v("gender")]),t._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("We will also describe the "),e("a",{attrs:{href:"#appendix-a:-standard-key-format"}},[this._v("standard format")]),this._v(" to be followed when developing language resources for Flarum, and offer "),e("a",{attrs:{href:"#appendix-b:-coding-for-the-world"}},[this._v("some tips")]),this._v(" that can help you make your language resources easier to localize. But first, let's begin with an overview of how Flarum prioritizes resources when displaying output for a third-party extension.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"how-flarum-translates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-flarum-translates","aria-hidden":"true"}},[this._v("#")]),this._v(" How Flarum Translates")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("It will begin by looking for a translation in the user's preferred display language.")]),this._v(" "),e("li",[this._v("If it can't find one, it will look for a translation in the forum's default language.")]),this._v(" "),e("li",[this._v('As a last-ditch effort, it will look for a "generic" English translation of the output.')]),this._v(" "),e("li",[this._v("If none of the above are available, it will give up and display a translation key.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"locale-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#locale-file","aria-hidden":"true"}},[this._v("#")]),this._v(" Locale File")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The extension skeleton includes a "),e("code",[this._v("locale/en.yml")]),this._v(" template where you can put your extension's English translations. If you want to add resources for another language or locale, just duplicate the template and give it an appropriate filename. Then open the file and start adding your translations!")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"adding-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-keys","aria-hidden":"true"}},[this._v("#")]),this._v(" Adding Keys")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Each translation in the locale file must be preceded by a key, which you will use as the "),e("strong",[this._v("identifier")]),this._v(" for that translation. The ID key should be in "),e("code",[this._v("snake_case")]),this._v(" and followed by a colon and a space, as shown below:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{attrs:{class:"token key atrule"}},[this._v("sample_key")]),e("span",{attrs:{class:"token punctuation"}},[this._v(":")]),this._v(" This is a sample translation.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can also use keys to "),e("strong",[this._v("namespace")]),this._v(" your translations. For starters, the first line of the locale file should consist of a single key that collects all the translations for your extension in a single namespace. This key should exactly match the name of the folder where your extension lives — "),e("code",[this._v("kebab-case")]),this._v(" and all.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Additional keys can be used to divide the extension namespace into groups. This comes in handy when you want to organize your translations according to where they appear in the user interface, for example. These intermediate namespacing keys should always be in "),e("code",[this._v("snake_case")]),this._v(".")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("acme-hello-world")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                "),a("span",{attrs:{class:"token comment"}},[t._v("# Namespacing for the extension; unindented.")]),t._v("\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                         "),a("span",{attrs:{class:"token comment"}},[t._v("# Namespacing for alerts; indented 2 spaces.")]),t._v("\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("hello_text")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "Hello'),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" world"),a("span",{attrs:{class:"token tag"}},[t._v('!"')]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# Identifier/translation; indented 4 spaces.")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Once you have this information in place, you can form the "),e("strong",[this._v("full translation key")]),this._v(' that you will use to access a translation by listing its keys in order from extension namespace to an identifier, with periods as delimiters. For example, the full translation key for the "Hello, world!" translation would be:')])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token string"}},[this._v("'acme-hello-world.alert.hello_text'")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("That's really all you need to know about the mechanics of key creation. Please be aware, however, that there is a standard format that developers need to follow when creating language resources for Flarum. The rules for "),e("a",{attrs:{href:"#namespacing-translations"}},[this._v("namespacing translations")]),this._v(" and "),e("a",{attrs:{href:"#naming-id-keys"}},[this._v("naming ID keys")]),this._v(" may be found in Appendix A.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"adding-translations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-translations","aria-hidden":"true"}},[this._v("#")]),this._v(" Adding Translations")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("Quotation Marks")]),t._v(" "),a("p",[t._v("You may have noticed that only one of the two sample translations in the previous section was enclosed in quotation marks. It is generally not necessary to delimit translations in this way. You should, however, use "),a("strong",[t._v("double quotes")]),t._v(" to enclose any translation that includes one or more of the following characters:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("`  !  @  #  %  &  *  -  =  [  ]  {  }  |  :  ,  <  >  ?\n")])])]),a("p",[t._v("Since Flarum uses curly brackets and angle brackets to denote placeholders for "),a("a",{attrs:{href:"#including-variables"}},[t._v("variables")]),t._v(" and "),a("a",{attrs:{href:"#html-tags"}},[t._v("HTML tags")]),t._v(", respectively, it goes without saying that any translation that includes such placeholders will also need to be enclosed in double quotes.")]),t._v(" "),a("p",[t._v("Furthermore, you should use "),a("strong",[t._v("single quotes")]),t._v(" to enclose any translation that includes one or more double quote ("),a("code",[t._v('"')]),t._v(") or backslash ("),a("code",[t._v("\\")]),t._v(") characters. This rule takes precedence! So if a translation were to include both double quotes and one or more characters from the list above — as does "),a("a",{attrs:{href:"#including-variables"}},[t._v("this example")]),t._v(", in which a variable placeholder is set off by quotation marks — you would need to enclose it in "),a("em",[t._v("single quotes")]),t._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"literal-blocks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#literal-blocks","aria-hidden":"true"}},[this._v("#")]),this._v(" Literal Blocks")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("When you need a translation to appear as more than a single line of text, the translation should be added as a "),e("strong",[this._v("literal block")]),this._v(". Enter a vertical bar ("),e("code",[this._v("|")]),this._v(") character where you would normally begin the translation, then add the translation below the ID key, indenting each line by an extra two spaces:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("literal_block_text")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{attrs:{class:"token scalar string"}},[t._v("\n  These lines will be displayed as shown here, line breaks and all.")]),t._v("\n\n      Extra indentation is also preserved"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" this line will be indented 4 spaces!\n\n  Quote marks are unnecessary"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" even when the block contains special characters.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"key-references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key-references","aria-hidden":"true"}},[this._v("#")]),this._v(" Key References")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("As a "),e("strong",[this._v("button")]),this._v(" that users can click when they want to edit some stuff")]),this._v(" "),e("li",[this._v("As the "),e("strong",[this._v("title")]),this._v(" of a dialog box displayed when users click that button")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Your instinct might be to add a single translation — let's call it \""),e("code",[this._v("edit_stuff")]),this._v('" — and use that ID key twice in your code. This approach is efficient, but it lacks flexibility: in some languages, it may not be possible to use the same phrase for both the button and the dialog title! A better way would be to define '),e("em",[this._v("two")]),this._v(" keys for use in your code, then set them both to reference the same translation, like so:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("edit_stuff_button")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" edit_stuff    "),a("span",{attrs:{class:"token comment"}},[t._v("# Used in the code that creates the button.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("edit_stuff_title")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" edit_stuff     "),a("span",{attrs:{class:"token comment"}},[t._v("# Used in the code that creates the dialog.")]),t._v("\n\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("edit_stuff")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Edit Stuff              "),a("span",{attrs:{class:"token comment"}},[t._v("# Not used in the code.")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can set one key to reference another by replacing its translation with an equal sign ("),e("code",[this._v("=")]),this._v("), a greater-than sign ("),e("code",[this._v(">")]),this._v("), and a space, followed by the full translation key to be referenced. When the extension is installed, Flarum's compiler will resolve these references to create a complete set of translations it can use.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("There's more to be said about referencing — for one thing, we've totally ignored the issue of namespacing in the above example! And you may be wondering why we suggested creating three keys when two would suffice. For an explanation, see the rules for "),e("a",{attrs:{href:"#reusing-translations"}},[this._v("reusing translations")]),this._v(" in Appendix A.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"using-the-translator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-the-translator","aria-hidden":"true"}},[this._v("#")]),this._v(" Using the Translator")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initializers"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("add")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'acme-hello-world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translator"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("trans")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'acme-hello-world.alert.hello_text'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("This shows the basic translation method, with no bells or whistles attached. Below you'll find examples of more complex translations involving things like "),e("a",{attrs:{href:"#including-variables"}},[this._v("variables")]),this._v(" and "),e("a",{attrs:{href:"#html-tags"}},[this._v("HTML tags")]),this._v(". (Please note that we've omitted the namespacing in the following examples to keep them simple; if you look at the actual code, you'll find the translations are properly namespaced according to the "),e("a",{attrs:{href:"#namespacing-translations"}},[this._v("standard format")]),this._v(".)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"including-variables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#including-variables","aria-hidden":"true"}},[this._v("#")]),this._v(" Including Variables")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-jsx harmony extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("LinkButton"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("component")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  icon"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'search'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  children"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translator"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("trans")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'all_discussions_button'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("query"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  href"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("route")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'index'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("q"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" query"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{attrs:{class:"token key atrule"}},[this._v("all_discussions_button")]),e("span",{attrs:{class:"token punctuation"}},[this._v(":")]),this._v(" "),e("span",{attrs:{class:"token string"}},[this._v("'Search all discussions for \"{query}\"'")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Since curly brackets are used to denote the placeholder, the translation as a whole needs to be enclosed in "),e("a",{attrs:{href:"#quotation-marks"}},[this._v("quotation marks")]),this._v(". Normally, double quotes would be used; but since this particular translation is using double quotes to set off the search query, the single-quote rule takes precedence.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"adding-html-tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-html-tags","aria-hidden":"true"}},[this._v("#")]),this._v(" Adding HTML Tags")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-jsx harmony extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("className")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("helpText"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translator"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("trans")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'icon_text'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://fortawesome.github.io/Font-Awesome/icons/"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("tabindex")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("-1"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token plain-text"}},[t._v("\n")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{attrs:{class:"token key atrule"}},[this._v("icon_text")]),e("span",{attrs:{class:"token punctuation"}},[this._v(":")]),this._v(" "),e("span",{attrs:{class:"token string"}},[this._v('"Enter the name of any <a>FontAwesome</a> icon class, <em>without</em> the <code>fa-</code> prefix."')]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Of course, you can give a parameter any name you like — you could use "),e("code",[this._v("<fred>")]),this._v(" and "),e("code",[this._v("</fred>")]),this._v(" to enclose your link text if you really wanted to! But we recommend sticking as close as possible to the actual HTML tags being represented, so your localizers will be able to understand what's going on.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"handling-pluralization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handling-pluralization","aria-hidden":"true"}},[this._v("#")]),this._v(" Handling Pluralization")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("On occasion, you may need to provide alternate versions of a translation to accommodate pluralization of a word or phrase. This is done by using the "),e("code",[this._v("app.translator.transChoice()")]),this._v(" method to pass the translation key — along with a variable that sets the conditions for pluralization — to the translator.")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" remaining "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minPrimary "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" primaryCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translator"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("transChoice")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{attrs:{class:"token string"}},[t._v("'choose_primary_placeholder'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  remaining"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" remaining "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("When the "),e("code",[this._v("app.translator.transChoice()")]),this._v(" method is called, the translator scans the translation for a variant that matches the sort of pluralization required by the value of the variable. These variants need to be listed serially — singular form first, then plural forms in order of increasing magnitude — and separated using the vertical line ("),e("code",[this._v("|")]),this._v(") character. Here's the English translation for the above code:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{attrs:{class:"token key atrule"}},[this._v("choose_primary_placeholder")]),e("span",{attrs:{class:"token punctuation"}},[this._v(":")]),this._v(" "),e("span",{attrs:{class:"token string"}},[this._v('"Choose a primary tag|Choose {count} primary tags"')]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"dealing-with-gender"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dealing-with-gender","aria-hidden":"true"}},[this._v("#")]),this._v(" Dealing with Gender")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"server-side-translation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#server-side-translation","aria-hidden":"true"}},[this._v("#")]),this._v(" Server-side Translation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("First, you'll need to get an instance of the "),e("code",[this._v("Flarum\\Locale\\Translator")]),this._v(" class. This can be done a few different ways:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token variable"}},[t._v("$translator")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("app")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'translator'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$translator")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("app")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'Flarum\\Locale\\Translator'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$translator")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("app")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Translator"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// you'll need to import the class with 'use' for this")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"registering-locales"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#registering-locales","aria-hidden":"true"}},[this._v("#")]),this._v(" Registering Locales")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("In order for server-side translation to work, you must have your locale registered before everything else in your "),e("code",[this._v("extend.php")]),this._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("There's one last thing you need to do before Flarum can use your translations. You need to register them. Fortunately, Flarum makes this pretty easy. Add the following to your "),e("code",[this._v("extend.php")]),this._v(":")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Extend"),a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Locales")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token constant"}},[t._v("__DIR__")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'/locale'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"appendix-a-standard-key-format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appendix-a-standard-key-format","aria-hidden":"true"}},[this._v("#")]),this._v(" Appendix A: Standard Key Format")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"namespacing-translations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namespacing-translations","aria-hidden":"true"}},[this._v("#")]),this._v(" Namespacing Translations")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("All translations are to be organized in categories, using namespacing keys arranged in up to "),e("strong",[this._v("three")]),this._v(" levels. Each level provides localizers with an important bit of information about "),e("em",[this._v("where the translation is used:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"➡-the-top-level-key-indicates-which-component-uses-the-translation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#➡-the-top-level-key-indicates-which-component-uses-the-translation","aria-hidden":"true"}},[this._v("#")]),this._v(" ➡ The top-level key indicates "),e("em",[this._v("which component uses the translation")]),this._v(".")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("core")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used by the Flarum core")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("validation")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used by Laravel's validator")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Translation keys used in an extension — including any third-party extension — need to be namespaced using the extension's name in "),e("code",[this._v("vendor-package")]),this._v(" format (e.g, "),e("code",[this._v("flarum-tags")]),this._v(" for the Tags extension).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("There should be only "),e("strong",[this._v("one")]),this._v(" first-level prefix in any locale file; it should be the first line in the locale file.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"➡-the-second-level-key-indicates-which-interface-uses-the-translation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#➡-the-second-level-key-indicates-which-interface-uses-the-translation","aria-hidden":"true"}},[this._v("#")]),this._v(" ➡ The second-level key indicates "),e("em",[this._v("which interface uses the translation")]),this._v(".")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("admin")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used by the admin interface.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("forum")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used by the forum user interface.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("lib")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used by either of the above.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("views")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used outside the normal JS client.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("api")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used in messages output by the API.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("email")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used in emails sent by Flarum.")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("The first four keys correspond roughly to the directories containing the code where the translations in that namespace will be used. (Most of your keys will probably go in "),a("code",[t._v("admin")]),t._v(" or "),a("code",[t._v("forum")]),t._v(".) The remaining two keys are a bit different: the "),a("code",[t._v("api")]),t._v(" namespace is for translations used in messages output by the API, while the "),a("code",[t._v("email")]),t._v(" namespace contains the resources for all emails sent by the forum.")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("ref")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations referenced by more than one key.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("group")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Translations used as default group names.")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("These two keys don't correspond to interfaces; they're for translations that require special handling. We'll explain how to use the "),e("code",[this._v("ref")]),this._v(" namespace when we talk about "),e("a",{attrs:{href:"#reusing-translations"}},[this._v("reusing translations")]),this._v(". The "),e("code",[this._v("group")]),this._v(" namespace holds the default group names, which are translated by the server rather than at the front end.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"➡-the-third-level-key-indicates-which-part-of-the-ui-uses-the-translation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#➡-the-third-level-key-indicates-which-part-of-the-ui-uses-the-translation","aria-hidden":"true"}},[this._v("#")]),this._v(" ➡ The third-level key indicates "),e("em",[this._v("which part of the UI uses the translation")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The keys in this level are not so rigidly defined. Their main purpose is to chop the UI up into manageable chunks, so localizers can find the translations and see for themselves how they are used by the software. (Third-level keys aren't used in the "),e("code",[this._v("ref")]),this._v(" and "),e("code",[this._v("group")]),this._v(" namespaces, which don't need chopping.)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("As a general rule, third-level keys should be short — no more than one or two words — and expressed in "),e("code",[this._v("snake_case")]),this._v(". They should be descriptive of the locations where the translations are used.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"naming-identifier-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#naming-identifier-keys","aria-hidden":"true"}},[this._v("#")]),this._v(" Naming Identifier Keys")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("Like the third-level namespacing keys, identifier keys should be expressed in "),a("code",[t._v("snake_case")]),t._v(". ID keys should be arranged in alphabetical order within each namespace, so they'll be easy for developers to find. (There is one exception to this rule! ID keys in the "),a("code",[t._v("email")]),t._v(" namespace should be listed just as they appear in your mail client: "),a("code",[t._v("subject")]),t._v(" first, then "),a("code",[t._v("body")]),t._v(".)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The typical ID key consists of two parts — a "),e("strong",[this._v("root")]),this._v(" and a "),e("strong",[this._v("suffix")]),this._v(" — each of which may be omitted in certain circumstances. Just as the namespacing keys tell localizers "),e("em",[this._v("where the translation is used")]),this._v(", each part of the ID key provides a further bit of information about the translation:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"➡-the-suffix-indicates-how-the-translation-is-used"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#➡-the-suffix-indicates-how-the-translation-is-used","aria-hidden":"true"}},[this._v("#")]),this._v(" ➡ The suffix indicates "),e("em",[this._v("how the translation is used")]),this._v(".")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("_button")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for buttons (including dropdown menu items).")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_link")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("          "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for links that are not shown graphically as buttons.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_heading")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for headings in tables and lists.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_label")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for the names of data fields, checkbox settings, etc.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_placeholder")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for placeholder text displayed in fields.")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("_confirmation")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for messages displayed to confirm an operation.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_message")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for messages that show the result of an operation.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_text")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("          "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for any text that is not a message, title, or tooltip.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_title")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for text displayed as the title of a page or modal.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_tooltip")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for text displayed when the user hovers over something.")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("And there are two suffixes that are used only in the "),e("code",[this._v("email")]),this._v(" namespace:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("_body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("          "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for the content of the email message.")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("_subject")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{attrs:{class:"token comment"}},[t._v("# Used for the subject line of the email message.")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("Suffixes should be "),a("strong",[t._v("omitted")]),t._v(" from ID keys for "),a("a",{attrs:{href:"#reusing-translations"}},[t._v("reused translations")]),t._v(" in the "),a("code",[t._v("ref:")]),t._v(" namespace. This is because you can't be sure these translations will always be used in the same context. Adding a new context would mean changing the key name "),a("em",[t._v("everywhere it's referenced")]),t._v(" … so it's best to keep these translations generic.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"➡-the-root-indicates-what-the-translation-says"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#➡-the-root-indicates-what-the-translation-says","aria-hidden":"true"}},[this._v("#")]),this._v(" ➡ The root indicates "),e("em",[this._v("what the translation says")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In other words, it should be a brief summation of the translation's content. If the translation is a very short phrase — no more than a few words long — you may want to use it verbatim (in "),e("code",[this._v("snake_case")]),this._v(", of course). If it's very long, on the other hand, you should try to boil it down to as few words as possible.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In some cases, the summary may be replaced by a description of the object's function. This is commonly seen in buttons. The button that submits a form should be identified as a "),e("code",[this._v("submit_button")]),this._v(' regardless of whether the translation says "OK" or "Save Changes". In a similar vein, the button that dismisses a dialog or message box is always a '),e("code",[this._v("dismiss_button")]),this._v(', even if it actually reads "OK" or "Cancel".')])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The root may also be "),e("strong",[this._v("omitted")]),this._v(" in certain cases — usually when the suffix alone is sufficient to identify the translation. For example, it's unlikely that a page or dialog box will have more than one title … and like as not, the content of the title is already given in the third-level namespacing! So the suffix can stand alone.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Suffixes are also sufficient to identify the subject and body components of an email message since each email will have only one subject line and one body. Note that the leading underscore is omitted in such cases: you would use just "),e("code",[this._v("title")]),this._v(", "),e("code",[this._v("subject")]),this._v(", or "),e("code",[this._v("body")]),this._v(" as the ID key.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"reusing-translations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reusing-translations","aria-hidden":"true"}},[this._v("#")]),this._v(" Reusing Translations")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Flarum's unique "),e("a",{attrs:{href:"#key-references"}},[this._v("key references")]),this._v(" fulfill the same role as YAML anchors, but they're better in one respect: you can even reference keys in a different file! For this reason, you need to use the "),e("strong",[this._v("full translation key")]),this._v(" when referencing. Here's a more realistic example of how referencing works, complete with namespacing:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("core")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("forum")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("header")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{attrs:{class:"token key atrule"}},[t._v("log_in_link")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" core.ref.log_in\n\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("log_in")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{attrs:{class:"token key atrule"}},[t._v("submit_button")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" core.ref.log_in\n      "),a("span",{attrs:{class:"token key atrule"}},[t._v("title")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" core.ref.log_in\n\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("ref")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("log_in")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Log In\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The reused translation is identified by a key that omits the suffix — as specified "),e("a",{attrs:{href:"#naming-identifier-keys"}},[this._v("above")]),this._v(" — and is placed in the "),e("code",[this._v("ref")]),this._v(" namespace. The latter measure is needed to avoid conflicts that can occur if a reused translation is given the same name as a second-level namespacing key. (The "),e("code",[this._v("email")]),this._v(" keys are a case in point.)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The "),e("code",[this._v("ref")]),this._v(" namespace also makes it easy to track translation reuse. Imagine what would happen if you set the scalars for the button and title to reference "),e("code",[this._v("core.forum.header.log_in_link")]),this._v(" instead:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("core")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),a("span",{attrs:{class:"token key atrule"}},[t._v("forum")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("header")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{attrs:{class:"token key atrule"}},[t._v("log_in_link")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" Log In\n\n    "),a("span",{attrs:{class:"token key atrule"}},[t._v("log_in")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{attrs:{class:"token key atrule"}},[t._v("submit_button")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" core.forum.header.log_in_link  "),a("span",{attrs:{class:"token comment"}},[t._v("# Never reference keys")]),t._v("\n      "),a("span",{attrs:{class:"token key atrule"}},[t._v("title")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ="),a("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" core.forum.header.log_in_link          "),a("span",{attrs:{class:"token comment"}},[t._v('# that aren\'t in "ref"!')]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("It would very easy to change the translation for the header link without realizing that you're also changing things in the Log In modal — to say nothing of any extensions that might also be referencing that key! This sort of thing will be less likely to occur if you keep your reused translations in the "),e("code",[this._v("ref")]),this._v(" namespace.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("Extension-specific translations should go in the "),e("code",[this._v("ref")]),this._v(" namespace of the extension's locale file.")])]),this._v(" "),e("li",[e("p",[this._v("Translations used by both the extension and the core should go in the "),e("code",[this._v("core.ref")]),this._v(" namespace.")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Third-party extensions are welcome to reference keys in the "),e("code",[this._v("core.ref")]),this._v(" namespace, but please be aware that we cannot add translations to this namespace based on reuse in third-party extensions. A third-party dev who wants to reuse a translation from a namespace other than "),e("code",[this._v("core.ref")]),this._v(" will need to add a properly keyed duplicate translation to the extension's locale file.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("One final caution: translation keys in the "),e("code",[this._v("ref")]),this._v(" namespace should "),e("strong",[this._v("never")]),this._v(" be inserted directly in code. This is because localizers may end up creating a translation to replace every reference to a reused translation key — in which case they would be within their rights to remove that key from the locale file. If such a key were being used in the code, it would end up without a matching resource to translate it!")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"adding-comments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-comments","aria-hidden":"true"}},[this._v("#")]),this._v(" Adding Comments")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("We've included some "),e("strong",[this._v("block comments")]),this._v(" in the locale file template included with the extension skeleton. They are there to remind developers of some basic concepts: translation keys should not be used in more than one place; keys for reused translations should never be inserted directly in code; and so forth.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You should add "),e("strong",[this._v("comment lines")]),this._v(" above every second- or third-level namespacing key, to give localizers a more complete description of the location covered by that namespace. When copying existing keys, be sure to copy the comment as well (and modify it if necessary). If you add a new third-level key, remember to preface it with a comment to explain the location being added.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You may also wish to add "),e("strong",[this._v("inline comments")]),this._v(" after a specific translation to provide localizers with further information about that translation (such as the fact that a translation can be pluralized if necessary).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"appendix-b-coding-for-the-world"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appendix-b-coding-for-the-world","aria-hidden":"true"}},[this._v("#")]),this._v(" Appendix B: Coding for the World")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"eliminate-all-hardcoded-text"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eliminate-all-hardcoded-text","aria-hidden":"true"}},[this._v("#")]),this._v(" Eliminate All Hardcoded Text!")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Generally speaking, any displayed text that isn't supplied by a variable or the result of a calculation "),e("em",[this._v("must")]),this._v(" be included in the locale files. That's easily said, but actually doing it takes a bit of perseverance.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"avoid-hardcoded-syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#avoid-hardcoded-syntax","aria-hidden":"true"}},[this._v("#")]),this._v(" Avoid Hardcoded Syntax!")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("Don't have an account? "),e("a",{attrs:{href:"#"}},[this._v("Sign Up")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("before_sign_up_link")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Don\'t have an account?"')]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("sign_up")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Sign Up\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("If you don't have an account yet, you can "),e("a",{attrs:{href:"#"}},[this._v("sign up")]),this._v(" instead!")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{attrs:{class:"token key atrule"}},[this._v("sign_up_text")]),e("span",{attrs:{class:"token punctuation"}},[this._v(":")]),this._v(" "),e("span",{attrs:{class:"token string"}},[this._v('"Don\'t have an account? <a>Sign Up</a>"')]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"keep-an-eye-out-for-plurals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-an-eye-out-for-plurals","aria-hidden":"true"}},[this._v("#")]),this._v(" Keep an Eye Out for Plurals!")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("Toby likes this.\nYou like this.\nToby and Franz like this.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("Toby replied to this.\nYou replied to this.\nToby and Franz replied to this.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In English, the simple past tense is not affected by pluralization. Since the verb phrase is always the same, it would be fairly easy to ignore the plurals and use the "),e("code",[this._v("app.translator.trans()")]),this._v(" method to produce the single necessary translation. Of course, that simply wouldn't work for the French localizer, who needs to inflect the verb differently in each of the above three sentences.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("This is the sort of situation where the humdrum chore of language abstraction requires a bit of extra care and attention. Remember to ask yourself whether each noun (or pronoun) can be pluralized. If it can, then be sure to use the "),e("code",[this._v("app.translator.transChoice()")]),this._v(" method and pass an appropriate variable to the translator. Of course, you don't need to provide any variant translations in the English resources …")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{attrs:{class:"token key atrule"}},[t._v("mentioned_by_text")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "'),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("users"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(' replied to this."       '),a("span",{attrs:{class:"token comment"}},[t._v("# Can be pluralized ...")]),t._v("\n"),a("span",{attrs:{class:"token key atrule"}},[t._v("mentioned_by_self_text")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "'),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("users"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(' replied to this."  '),a("span",{attrs:{class:"token comment"}},[t._v("# Can be pluralized ...")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"reuse-translations-not-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reuse-translations-not-keys","aria-hidden":"true"}},[this._v("#")]),this._v(" Reuse Translations, Not Keys!")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("If the namespacing keys combine to form a complete specification of where a translation is used, and the ID key specifies exactly how the translation is used and what it says, then it stands to reason that every full translation key must be unique. In other words: "),e("em",[this._v("you should never use the same key more than once!")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("Fortunately, you can avoid many such issues if you simply take care to "),a("a",{attrs:{href:"#namespacing-translations"}},[t._v("namespace translations")]),t._v(" correctly, "),a("a",{attrs:{href:"#naming-identifier-keys"}},[t._v("name your ID keys")]),t._v(" appropriately, and always "),a("a",{attrs:{href:"#reusing-translations"}},[t._v("reuse translations")]),t._v(" instead of keys. Though it may seem like a bother, in the long run, the "),a("a",{attrs:{href:"#appendix-a:-standard-key-format"}},[t._v("standard format")]),t._v(" will make localization much easier for "),a("em",[t._v("everyone")]),t._v(".")])}],!1,null,null,null);n.options.__file="i18n.md";e.default=n.exports}}]);